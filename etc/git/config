[core]
    autocrlf = false
    excludesfile = ~/.gitignore
    whitespace = trailing-space,space-before-tab
    editor = /usr/bin/vim
    attributesFile = ~/.gitattributes

# ======================================================
# For one GH accounts on a single machine
# ------------------------------------------------------
# Put this in ~/.gitconfig.local on machines where you
# only have one GH account.
#
#[user]
#  name = Guy Hoozdis
#  email = GuyHoozdis@users.noreply.github.com
#
# ======================================================
# For multiple GH accounts on a single machine
# ------------------------------------------------------
# 1. Put this in ~/.gitconfig.local
#
#[user]
#  name = Primary Account
#  email = primary-account@email.com
#[includeIf "gitdir:~/path/to/secondary/"]
#  path = ~/path/to/secondary/.gitconfig
#
# ------------------------------------------------------
# 2. Put the following in ~/path/to/secondary/.gitconfig
#[user]
#  name = Secondary Account
#  email = secondary-account@email.com
#
#[core]
#  sshCommand = "ssh -o IdentitiesOnly -i ~/.ssh/secondary_rsa -F /dev/null"
# ======================================================

[color]
    ui = auto
    status = auto
    commit = auto
    diff = auto

[push]
    default = simple
    autoSetupRemote = true

[tag]
    sort = version:refname

[merge]
    tool = vimdiff

[alias]
    sw = switch
    co = checkout
    st = status
    b = branch
    fap = fetch --all --prune --prune-tags
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    lg1 = log --graph --pretty=oneline --abbrev-commit --decorate
    lgn = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative -n 10
    lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --branches --remotes
    supr = submodule update --recursive
    unstage = restore --staged
    amend = commit --amend --no-edit

    # Prune all tracking local branches that have been removed from remote
    prune-all = !git remote | xargs -n 1 git remote prune

    # Given a string for an author, try to figure out full name and email:
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    # Given any git object, try to show it briefly
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short

    # Show list of contributors
    rank = shortlog -sn --no-merges
    count = shortlog -sn

    # Show insertions/deletions to guage PR size.
    prsize = diff --shortstat main...HEAD

    # Show author of last commit on every branch on the remote
    branch-owners = for-each-ref --format='%(committerdate:short) | %(refname:short) | %(authorname)' --sort="committerdate" refs/remotes
    branch-owners-table = !git branch-owners | column -s='|' -t

    wipe = clean -xfd -e .python-version -e tmp/ -e *env

    aliases = config --get-regexp ^alias

    snapshot = !git stash push --include-untracked --message \"snapshot: $(date)\" && git stash apply \"stash@{0}\" --index

[include]
  path = ~/.gitconfig.local

[mailmap]
  file = ~/.mailmap.local

[mergetool]
	prompt = true

# This section is managed in .gitconfig.local
#[hub] # protocol = ssh

[init]
	defaultBranch = main
