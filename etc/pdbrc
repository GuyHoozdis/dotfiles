# Shameless rip from
#
#   https://nedbatchelder.com/blog/200704/my_pdbrc.html
#
# This idea for executing additional content from the working directory is
# interesting.
#
#   https://wiki.python.org/moin/PdbRcIdea

# Print a dict sorted.  %1 is the dict, %2 is the prefix for the names.
alias p_ for k in sorted(%1.keys()): print("%s%-15s= %-80.80s" % ("%2", k, repr(%1[k])))

# Print the instance variables of a thing
alias pi p_ %1.__dict__ %1.

# Print the instance variables of self
alias ps pi self

# Print the locals
alias pl p_ locals() local:

# Next then list and step then list
alias nl n;;l
alias sl s;;l

# Shortcuts for walking up/down the stack
alias uu u;;u
alias uuu u;;u;;u
alias dd d;;d
alias ddd d;;d;;d

# Cast dict-like or list-like objects and then pretty-print them
alias ppd pp dict(%1)
alias ppl pp list(%1)

# Deserialize a JSON string and then pretty-print it
from json import loads
alias ppj pp loads(%1)



# ================================================================================
# The `trace` and `print_trace` commands have moved to the `pyutils` package.
#
# >>> from pyutils.ipython.terminal.utils import which_test

# ================================================================================
# This does work, but I need to make this deployable.  This file, pdbrc,  is
# checked in to my dotfiles, where the file it references is not (yet).
#
# execfile('/Users/sully/.ipython/profile_default/startup/10-utils.py')

# This is an alternative to the execfile approach.  The only drawback is that it
# pollutes the locals() namespace.
#from pyutils import *
# ================================================================================
import pyutils
alias ppsql pyutils.ppsql
alias cformat pyutils.cformat
alias cprint pyutils.cprint
alias inspect_method pyutils.inspect_method

