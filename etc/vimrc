" =======================================================================
" Installation and Setup
"
" On a new machine:
" 1. Create your ~/.vim directory with structure for native plugin manager
"
"   mkdir -p ~/.vim/pack/{colors,plugins,syntax}/{opt,start}
"
" 2. Install the desired plugins by cloning them into the appropriate
" directory.
"
"   cd ~/.vim/pack/plugins/start
"   hub clone scrooloose/nerdtree
"
" Example:
"
".vim
"└── pack
"    ├── colors
"    │   ├── opt
"    │   └── start
"    │       └── vim-colors-solarized
"    ├── plugins
"    │   ├── opt
"    │   └── start
"    │       ├── copilot.vim
"    │       ├── ctrlp.vim
"    │       ├── editorconfig-vim
"    │       ├── nerdtree
"    │       ├── vim-repeat
"    │       └── vim-surround
"    └── syntax
"        ├── opt
"        └── start
"
" 3. Copy this file to ~/.vimrc and modify to fit that machine's needs.
"
" ========================= Reference ===================================
" The vimrc in this repo looks like it is a good resource.  Check out the
" syntax highlighting plugin.
"
" - https://github.com/ets-labs/python-vimrc
"
" ----------------------------------------------------------------------
" A "Learn X the Hardway" e-book!!!  I've only just scanned over it, but
" it looks packed full of great topics with good samples.
"
" - http://learnvimscriptthehardway.stevelosh.com/chapters/48.html
"
" ----------------------------------------------------------------------
" I don't recall what this is all about.  I need to follow up on this.
"
" - https://github.com/spf13/spf13-vim#a-highly-optimized-vimrc-config-file
"
" ----------------------------------------------------------------------
" Leaving these for reference.
"
"  call dein#add('scrooloose/nerdtree')      " NerdTree - filesystem explorer
"  call dein#add('tpope/vim-fugitive')       " Fugitive - git wrapper
"  call dein#add('tpope/vim-surround')       " Another tpope miracle
"  call dein#add('tpope/vim-commentary')     " Another tpope miracle
"  call dein#add('stephpy/vim-yaml')         " YAML Syntax
"  call dein#add('vim-airline/vim-airline')  " Status/tabline enhancement
"  call dein#add('vim-airline/vim-airline-themes')
"  call dein#add('ctrlpvim/ctrlp.vim')       " Ctrl-P - File/Directory search
"  call dein#add('editorconfig/editorconfig-vim')
"  call dein#add('fholgado/minibufexpl.vim')   " Mini Buffer Explorer
"  call dein#add('~/Development/guyhoozdis/vim-n1ql')
"  " This required a bit of setup, more than I would normally tolerate, but it is useful and I do use it.
"  "   https://github.com/JamshedVesuna/vim-markdown-preview
"  call dein#add('JamshedVesuna/vim-markdown-preview')
"
"  " Above: These should be promoted to standard packages I use
"  " Experimental - Things I am giving a chance, but might not keep
"  call dein#add('tpope/vim-repeat')         " Another tpope miracle
"  call dein#add('tpope/vim-speeddating')    " Another tpope miracle
"
"  " XXX: Take a closer look at this.  It may merely be an ordering problem,
"  " but this doesn't appear to work.
"  " YAML & Jinja Syntax Highlighting
"  "   https://pinrojas.com/2017/01/25/highlight-ansible-yaml-and-jinja-syntax-in-vim-editor/
"  call dein#add('chase/vim-ansible-yaml')
"  call dein#add('lepture/vim-jinja')
"
"  " Below: These are things I came upon in http://github.com/docker-library/docs/DockerFile
"  "        but I haven't enabled it yet.
"  "call dein#add('jtratner/vim-flavored-markdown')
"
"  " I haven't used these and don't think that I will
"  call dein#add('vim-scripts/Conque-Shell')
"  call dein#add('alfredodeza/pytest.vim')
"  call dein#add('ajh17/spacegray.vim')
"  " JavaScript IDE
"  "   https://javascriptplayground.com/vim-for-javascript/
"  " This looks like it will take some getting used to.
"  "   https://github.com/SirVer/ultisnips
"  call dein#add('pangloss/vim-javascript')
"  call dein#add('mxw/vim-jsx')
"  call dein#add('leshill/vim-json')
"
"  " Under Development
"  call dein#add('~/Development/guyhoozdis/vim-thinkscript/')
"  call dein#add('altercation/vim-colors-solarized')
"
"  " -----------------------------------------------------------------------------
"  " I want to introduce these too, but I don't want to do too many at once, so
"  " these are a reminder to pull them in later.
"  "
"  "   https://github.com/tpope/vim-unimpaired/blob/master/doc/unimpaired.txt
"  "   https://github.com/svermeulen/vim-easyclip
"  " -----------------------------------------------------------------------------
"
"  "call dein#add('jeffkreeftmeijer/vim-dims')
" ----------------------------------------------------------------------

if &compatible
  set nocompatible	" Be iMproved
endif

" Required
filetype plugin indent on
syntax enable


" ----------------------------------------------------------------------
"
" Global VI/VIM configuration
"
" ----------------------------------------------------------------------

"
" Make VIM silent
"
    set noerrorbells visualbell t_vb=

"
" Redefine the map leader
"
    let mapleader=','

"
" Write files with sudo
"
    noremap <leader>W :w !sudo tee %<CR>


"
" Airline customization
"
" Here are a few themes that look decent on my current setup
"
"     https://github.com/vim-airline/vim-airline/wiki/Screenshots#full-list-without-powerline-font-unfortunately
"
" I ended up installing the pre-patched fonts from powerline.  I had to go
" into the iTerm preferences and select one of the _<blah> Powerline_ fonts.
"
" Per the article below I have been using "Inconsolata for Powerline" font, at
" 14pt, and it has been working pretty well.  The article is a good reference
" for the commands I ran to install the patched Powerline fonts (so  Airline
" could use them), but I didn't actually do anything else described by that
" article.
"
"     https://coderwall.com/p/yiot4q/setup-vim-powerline-and-iterm2-on-mac-os-x
"
" I'm still trying to find the theme that works best for me.  These are a few
" of the ones that, at a glace, look decent.
"
"  * angr
"  * lucius
"  * molokai
"  * murmur
"  * papercolor
"  X serene - (statusline is same color as document, no contrast)
"  * understated
"
    set laststatus=2
    let g:airline_theme = 'murmur'
    let g:airline_powerline_fonts = 1


"
" Format/Prettify
"
" TODO: The hex-editing formatting command is quick-and-dirty.
" See http://vimdoc.sourceforge.net/htmldoc/tips.html#hex-editing
" for upgrading hex-editing mode, if it ever comes to that.
"
    nmap =j :%!python -m json.tool<CR>
    nmap =x :%!xmllint --format --recover --encode UTF-8 -<CR>
    nmap =hex :%!xxd<CR>
    nmap =unhex :%!xxd -r<CR>


"
" Base VIM configuration
"
    set tabstop=2
    set softtabstop=2
    set shiftwidth=2
    set expandtab
    set nowrap
    set relativenumber
    set number


"
" Colorschemes:
"
" The default colorscheme is set here, but will be overriden, per
" language, under ~/.vim/after/ftplugin/<language>.vim
"
    colorscheme solarized

    if &diff
      " http://blog.binchen.org/posts/use-vimdiff-to-resolve-git-merge-conflicts-effectively.html
      " https://gist.github.com/mattratleph/4026987
      " - See the comment that discusses setting cursorline and some of the
      "   highlight colors
      "
      "colorscheme slate
      set laststatus=2
      set statusline+=%-10.3n
      map <silent> <leader>1 :diffget 1<CR> :diffupdate<CR>
      map <silent> <leader>2 :diffget 2<CR> :diffupdate<CR>
      map <silent> <leader>3 :diffget 3<CR> :diffupdate<CR>
    endif


" ----------------------------------------------------------------------
"
" Markdown Preview
"
" Notes:
" - Grip: Render local readme files before sending off to GitHub
"   - https://github.com/joeyespo/grip
"   - Readme Driven Development: http://tom.preston-werner.com/2010/08/23/readme-driven-development.html
"   - This was installed via Homebrew.
" - GitHub may rate limit or block if too much activity.  Configuring a token
"   can increase the API daily quota.
"   - https://github.com/joeyespo/grip#access
"   - This has not been done yet.

let vim_markdown_preview_browser='Google Chrome'
let vim_markdown_preview_github=1
let vim_markdown_preview_hotkey='<C-m>'


"
" Mini Buff Explorer
"
    " Open/close MB and adjust ordering of elements
    map <Leader>mbo :MBEToggle<CR>
    map <Leader>mbl :MBEToggleMRU<CR>
    " Move to the next/previous normal buffer
    map <Leader>mbn :MBEbn<CR>
    map <Leader>mbp :MBEbp<CR>
    " Move forward/backward in the MRU buffer list
    map <Leader>mbf :MBEbf<CR>
    map <Leader>mbb :MBEbb<CR>


"
" CtrlP
"
    let g:ctrlp_working_path_mode = 'rc'
    let g:ctrlp_lazy_update = 1
    let g:ctrlp_match_current_file = 0
    let g:ctrlp_line_prefix = 'search> '


"
" Custom NERDTree Configuration
"
    nmap <Leader>nt :NERDTreeToggle<CR>
    let NERDTreeIgnore = ['\.pyc$', 'node_modules/', 'venv', '__pycache__']


"
" Fugitive customization
"
    nmap <Leader>gs :Gstatus<CR>
    nmap <Leader>gd :Gdiff<CR>
    nmap <Leader>gb :Gblame<CR>
    nmap <Leader>gl :Glog<CR>
    "nmap <Leader>gc :Gcommit<CR>
    "nmap <Leader>gp :Gpush<CR>


"
" JavaScript
"
"    let g:javascript_plugin_flow = 1
"    let g:jsx_ext_required = 0


"
" EditorConfig Customization
"
" Per the project's README, these changes are recommended.
"
    let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
